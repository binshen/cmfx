<?phpnamespace Home\Controller;use Common\Controller\AdminbaseController;class AdminPayMngController extends AdminbaseController {        protected $Dao;    protected $BrokerDao;    protected $LogDao;        function _initialize() {                parent::_initialize();        $this->Dao = D("Home/PayMng");        $this->BrokerDao = D("Home/Broker");        $this->LogDao = D("Home/PayLog");    }        function index(){                $map = array();        if(IS_POST) {            $broker = I('post.broker');            if(!empty($broker)) {                $map['sid'] = $broker;            }                    $date = I('post.date');            if(!empty($date)) {                $map["DATE_FORMAT(sd_perf.date,'%Y%m')"] = $date;            }                    $this->assign('broker', $broker);            $this->assign('date', $date);        }                        $managerList = $this->Dao            ->join('sd_perf ON sd_perf.id = sd_pay_mng.pid')            ->join('sd_broker ON sd_broker.id = sd_pay_mng.sid')            ->join('sd_project ON sd_project.id = sd_perf.pid', 'left')            ->join('sd_store ON sd_store.manager_id = sd_pay_mng.sid', 'left')            ->field("sd_broker.id AS mid, sd_broker.name AS mname, DATE_FORMAT(sd_perf.date,'%Y-%m') AS date, sd_store.name AS sname, sd_store.loss")            ->group("sd_broker.id, DATE_FORMAT(sd_perf.date,'%Y-%m')")            ->where($map)            ->select();                foreach ($managerList as &$m) {            $sid = $m['mid'];            $date = $m['date'];            //$m['bonus'] = getManagerProfile($sid, $date);            $m['bonus1'] = getSelfStoreProfit($sid, $date);            $m['bonus2'] = getSubStoreProfit($sid, $date) * 0.5;        }                $this->assign('managerList', $managerList);                $brokerList = $this->BrokerDao->where('status=1 AND rank_id=6')->order('name')->select();        $this->assign('brokerList', $brokerList);                $this->display();    }        function edit($sid,$bonus1,$bonus2,$date){    	$data = array(    			'sid'=>$sid,    			'bonus1'=>$bonus1,    			'bonus2'=>$bonus2,    			'date'=>$date    	);    	    	//自营店应付    	$zy_yingfu = $this->Dao	    	->where("sid=".$sid)	    	->field("sum(pay) pay")	    	->find();	    //已付款    	$rs = $this->LogDao	    	->where("bid=".$sid." and type in (1,2)")	    	->field("type,sum(pay) pay")	    	->group("type")	    	->select();	    		    $yifu = array();    	foreach($rs as $v){    		$yifu[$v['type']] = $v['pay'];    	}    	if(!isset($yifu[1])) $yifu[1] = 0;    	if(!isset($yifu[2])) $yifu[2] = 0;    	//自营店可付款    	$zy_kefu = $zy_yingfu['pay'] - getSelfStoreLoss($sid, date("Y-m",strtotime($date))) - $yifu[1];    	    	$this->assign('zy_kefu',$zy_kefu);    	$this->assign($data);    	$this->display();    }}